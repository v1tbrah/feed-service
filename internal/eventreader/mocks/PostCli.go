// Code generated by mockery v2.24.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	model "github.com/v1tbrah/feed-service/internal/model"
)

// PostCli is an autogenerated mock type for the PostCli type
type PostCli struct {
	mock.Mock
}

// GetPostsByUserID provides a mock function with given fields: ctx, userID
func (_m *PostCli) GetPostsByUserID(ctx context.Context, userID int64) ([]model.Post, error) {
	ret := _m.Called(ctx, userID)

	var r0 []model.Post
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int64) ([]model.Post, error)); ok {
		return rf(ctx, userID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int64) []model.Post); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Post)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, int64) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPostCli interface {
	mock.TestingT
	Cleanup(func())
}

// NewPostCli creates a new instance of PostCli. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPostCli(t mockConstructorTestingTNewPostCli) *PostCli {
	mock := &PostCli{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
