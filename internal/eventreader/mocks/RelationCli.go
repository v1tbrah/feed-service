// Code generated by mockery v2.24.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// RelationCli is an autogenerated mock type for the RelationCli type
type RelationCli struct {
	mock.Mock
}

// GetFriends provides a mock function with given fields: ctx, userID
func (_m *RelationCli) GetFriends(ctx context.Context, userID int64) ([]int64, error) {
	ret := _m.Called(ctx, userID)

	var r0 []int64
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int64) ([]int64, error)); ok {
		return rf(ctx, userID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int64) []int64); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]int64)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, int64) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRelationCli interface {
	mock.TestingT
	Cleanup(func())
}

// NewRelationCli creates a new instance of RelationCli. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRelationCli(t mockConstructorTestingTNewRelationCli) *RelationCli {
	mock := &RelationCli{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
